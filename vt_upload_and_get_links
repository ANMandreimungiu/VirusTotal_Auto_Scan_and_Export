import os
import time
import requests
import json
from tqdm import tqdm

def run_vt_analysis():
    # Define source folder as the script's location and output file
    source_folder = os.path.dirname(os.path.abspath(__file__))
    output_file = os.path.join(source_folder, "vt_analysis_urls.json")

    # Get files from the source folder and its subfolders, and exclude .txt, .zip, and any .json files
    files = []
    for root, _, filenames in os.walk(source_folder):
        for filename in filenames:
            if not filename.endswith(('.txt', '.zip', '.json', '.py')):
                files.append(os.path.join(root, filename))

    # Initialize counters
    total_files = len(files)
    successful_uploads = 0
    responses_received = 0

    # Calculate the delay in seconds between file uploads (20 seconds = 4 lookups/min + 5 extra seconds)
    delay = 16

    # Initialize an empty dictionary to store file names and associated URLs
    analysis_urls = {}

    # Process each file using tqdm for displaying a progress bar
    for file in tqdm(files, desc="Processing files", unit="file"):
        # Upload the file to VirusTotal and get the response
        headers = {
            'accept': 'application/json',
            'x-apikey': os.environ['VT_API_KEY']
        }
        url = 'https://www.virustotal.com/api/v3/files'
        with open(file, 'rb') as file_data:
            response = requests.post(url, headers=headers, files={'file': file_data})
        upload_response = json.loads(response.text)

        if upload_response.get('data'):
            successful_uploads += 1
            analysis_url = upload_response['data']['links']['self']
            analysis_urls[file] = analysis_url
            responses_received += 1
        else:
            print(f"\nError uploading file: {file}")

        # Wait for the specified delay before processing the next file
        time.sleep(delay)

    # Save the dictionary as a JSON file
    with open(output_file, 'w', encoding='utf8') as f:
        json.dump(analysis_urls, f, ensure_ascii=False, indent=4)

    print(f"\nTotal files found: {total_files}")
    print(f"Successful uploads: {successful_uploads}")
    print(f"Responses received: {responses_received}")

if __name__ == '__main__':
    run_vt_analysis()
